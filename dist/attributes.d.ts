declare type EventHandler = (event: Event) => void;
export declare type Attributes = {
    'accept'?: string;
    'accept-charset'?: string;
    'accessKey'?: string;
    'action'?: string;
    'align'?: string;
    'allow'?: string;
    'alt'?: string;
    'async'?: boolean;
    'autoCapitalize'?: boolean;
    'autoComplete'?: boolean;
    'autoFocus'?: boolean;
    'autoPlay'?: boolean;
    'buffered'?: string;
    'capture'?: string;
    'challenge'?: string;
    'charset'?: string;
    'checked'?: boolean;
    'cite'?: string;
    'className'?: string;
    'code'?: string;
    'codebase'?: string;
    'cols'?: number;
    'colSpan'?: number;
    'content'?: string;
    'contentEditable'?: boolean;
    'contextMenu'?: string;
    'controls'?: boolean;
    'coords'?: string;
    'crossOrigin'?: string;
    'csp'?: string;
    'data'?: string;
    [key: `data-${string}`]: any;
    'dateTime'?: string;
    'decoding'?: string;
    'default'?: string;
    'defer'?: boolean;
    'dir'?: string;
    'dirname'?: string;
    'disabled'?: boolean;
    'download'?: boolean;
    'draggable'?: boolean;
    'enctype'?: string;
    'enterKeyHint'?: string;
    'for'?: string;
    'form'?: string;
    'formAction'?: string;
    'formEnctype'?: string;
    'formMethod'?: string;
    'formNoValidate'?: string;
    'formTarget'?: string;
    'headers'?: string;
    'height'?: string;
    'hidden'?: boolean;
    'high'?: string;
    'href'?: string;
    'hrefLang'?: string;
    'http-equiv'?: string;
    'icon'?: string;
    'id'?: string;
    'importance'?: string;
    'integrity'?: string;
    'inputMode'?: string;
    'isMap'?: boolean;
    'itemProp'?: string;
    'keytype'?: string;
    'kind'?: string;
    'label'?: string;
    'lang'?: string;
    'loading'?: string;
    'list'?: string;
    'loop'?: string;
    'low'?: string;
    'max'?: string;
    'maxLength'?: string;
    'minLength'?: string;
    'media'?: string;
    'method'?: string;
    'min'?: string;
    'multiple'?: string;
    'muted'?: boolean;
    'name'?: string;
    'noValidate'?: boolean;
    'onAbort'?: EventHandler;
    'onAnimationCancel'?: EventHandler;
    'onAnimationEnd'?: EventHandler;
    'onAnimationIteration'?: EventHandler;
    'onAuxClick'?: EventHandler;
    'onBlur'?: EventHandler;
    'onCancel'?: EventHandler;
    'onCanPlay'?: EventHandler;
    'onCanPlayThrough'?: EventHandler;
    'onChange'?: EventHandler;
    'onClick'?: EventHandler;
    'onClose'?: EventHandler;
    'onContextMenu'?: EventHandler;
    'onCueChange'?: EventHandler;
    'onDblClick'?: EventHandler;
    'onDurationChange'?: EventHandler;
    'onEnded'?: EventHandler;
    'onError'?: EventHandler;
    'onFocus'?: EventHandler;
    'onFormData'?: EventHandler;
    'onGotPointerCapture'?: EventHandler;
    'onInput'?: EventHandler;
    'onInvalid'?: EventHandler;
    'onKeyDown'?: EventHandler;
    'onKeyPress'?: EventHandler;
    'onKeyUp'?: EventHandler;
    'onLoad'?: EventHandler;
    'onLoadedData'?: EventHandler;
    'onLoadedMetadata'?: EventHandler;
    'onLoadEnd'?: EventHandler;
    'onLoadStart'?: EventHandler;
    'onLostPointerCapture'?: EventHandler;
    'onMouseDown'?: EventHandler;
    'onMouseEnter'?: EventHandler;
    'onMouseLeave'?: EventHandler;
    'onMouseMove'?: EventHandler;
    'onMouseOut'?: EventHandler;
    'onMouseOver'?: EventHandler;
    'onMouseUp'?: EventHandler;
    'onPause'?: EventHandler;
    'onPlay'?: EventHandler;
    'onPlaying'?: EventHandler;
    'onPointerCancel'?: EventHandler;
    'onPointerDown'?: EventHandler;
    'onPointerEnter'?: EventHandler;
    'onPointerLeave'?: EventHandler;
    'onPointerMove'?: EventHandler;
    'onPointerOut'?: EventHandler;
    'onPointerOver'?: EventHandler;
    'onPointerUp'?: EventHandler;
    'onReset'?: EventHandler;
    'onResize'?: EventHandler;
    'onScroll'?: EventHandler;
    'onSecurityPolicyViolation'?: EventHandler;
    'onSelect'?: EventHandler;
    'onSelectionChange'?: EventHandler;
    'onSelectStart'?: EventHandler;
    'onSlotChange'?: EventHandler;
    'onSubmit'?: EventHandler;
    'onTouchCancel'?: EventHandler;
    'onTouchStart'?: EventHandler;
    'onTransitionCancel'?: EventHandler;
    'onTransitionEnd'?: EventHandler;
    'onWheel'?: EventHandler;
    'open'?: boolean;
    'optimum'?: string;
    'pattern'?: string;
    'ping'?: string;
    'placeholder'?: string;
    'poster'?: string;
    'preload'?: string;
    'radioGroup'?: string;
    'readonly'?: boolean;
    'referrerPolicy'?: string;
    'rel'?: string;
    'required'?: boolean;
    'reversed'?: boolean;
    'rows'?: number;
    'rowSpan'?: number;
    'sandbox'?: string;
    'scope'?: string;
    'selected'?: boolean;
    'shape'?: string;
    'size'?: string;
    'sizes'?: string;
    'slot'?: string;
    'span'?: number;
    'spellcheck'?: boolean;
    'src'?: string;
    'srcDoc'?: string;
    'srcLang'?: string;
    'srcSet'?: string;
    'start'?: string;
    'step'?: string;
    'style'?: CSSStyleDeclaration;
    'tabIndex'?: number;
    'target'?: string;
    'title'?: string;
    'translate'?: boolean;
    'type'?: string;
    'useMap'?: string;
    'value'?: string;
    'width'?: string;
    'wrap'?: boolean;
};
export {};
